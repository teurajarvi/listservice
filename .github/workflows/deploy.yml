name: Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Environment to deploy
        options: [dev, stage, prod]
        default: dev

jobs:
  plan:
    strategy:
      matrix:
        environment: [dev, stage, prod]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Build lambda
        run: |
          python -m pip install -U pytest
          make test
          make package

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Terraform Init
        working-directory: infra
        run: terraform init -input=false

      - name: Terraform Plan
        id: plan
        working-directory: infra
        run: |
          terraform plan -input=false -no-color             -var "stage=${{ matrix.environment }}"             -var "lambda_package_path=../build/listservice.zip"
        continue-on-error: true

      - name: Upload Plan Output
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: tf-plan-output
          path: infra

  apply:
    needs: plan
    strategy:
      matrix:
        environment: [dev, stage, prod]
    runs-on: ubuntu-latest
    environment: ${{ matrix.environment }}
    if: ${{ github.event_name == 'workflow_dispatch' }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5
      - name: Terraform Init
        working-directory: infra
        run: terraform init -input=false
      - name: Terraform Apply (requires approval)
        working-directory: infra
        run: |
          terraform apply -auto-approve             -var "stage=${{ matrix.environment }}"             -var "lambda_package_path=../build/listservice.zip"
